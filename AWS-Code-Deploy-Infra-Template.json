{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CodeDeploy infra",
  "Parameters" : {
    "VPCID": {
      "Description" : "VPC ID",
      "Type": "String",
      "Default": "vpc-e2157a86"
    },
    "myIP": {
      "Description" : "Enter your IP address in CIDR notation, e.g. 100.150.200.225/32",
      "Type": "String",
      "Default": "99.89.37.190/32"
    },
    "InstanceProfile": {
      "Description" : "Use the full ARN for SimpleCodeDeployInstanceProfile or AdvancedCodeDeployInstanceProfile",
      "Type": "String",
      "Default": "arn:aws:iam::103515458989:instance-profile/Udemy-CodeDeployInstanceProfileRole"
    },
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "The name of an existing EC2 KeyPair.",
      "Default": "OregonRegionEC2Key"
    },
    "AZ"  : {
      "Description" : "Comma delimited list of AvailabilityZones where the instances will be created",
      "Type"        : "CommaDelimitedList",
      "Default": "us-west-2a,us-west-2b,us-west-2c"
    },
    "PublicSubnets"  : {
      "Description" : "Comma delimited list of public subnets",
      "Type"        : "CommaDelimitedList",
      "Default": "subnet-baa31ecc,subnet-c726e19f,subnet-2758c243"
    },
    "InstanceType" : {
      "Description" : "Provide InstanceType to be used",
      "Type" : "String",
      "ConstraintDescription" : "Must be a valid EC2 instance type, such as t2.medium",
      "Default": "t2.micro"
    },
    "LinuxAMIID" : {
      "Description" : "Linux AMI ID",
      "Type" : "String",
      "Default": "ami-f2d3638a"
    },
    "WindowsAMIID" : {
      "Description" : "Windows AMI ID",
      "Type" : "String"
    }
  },

  "Conditions" : {
    "CreateWindows": {"Fn::Not": [{"Fn::Equals" : [{"Ref" : "WindowsAMIID"}, ""]}]}
  },

  "Resources" : {
    "WebSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "WebSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": -1,
            "IpProtocol": "-1",
            "ToPort": -1
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 80,
            "IpProtocol": "6",
            "ToPort": 80
          },
          {
            "CidrIp": {
              "Ref": "myIP"
            },
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },

    "LinuxWebSNSTopic" : {
      "Type" : "AWS::SNS::Topic"
    },

    "LinuxWebASG" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Ref" : "AZ" },
        "VPCZoneIdentifier" : { "Ref": "PublicSubnets" },
        "MinSize" : "3",
        "MaxSize" : "3",
        "HealthCheckType" : "ELB",
        "HealthCheckGracePeriod" : "600",
        "NotificationConfiguration" : {
          "TopicARN" : { "Ref" : "LinuxWebSNSTopic" },
          "NotificationTypes" : [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ]
        },
        "LoadBalancerNames" : [ { "Ref" : "LinuxWebELB" } ],
        "DesiredCapacity" : "3",
        "LaunchConfigurationName" : { "Ref" : "LinuxWebLaunchConfig" },
        "Tags" : [
          {"Key" : "Name", "Value" : "LinuxWebServer", "PropagateAtLaunch" : "true" }
        ]
      }
    },

    "LinuxWebLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress" : "true",
        "ImageId": { "Ref": "LinuxAMIID" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n\n",
                "yum update -y\n\n",
                "yum install httpd -y\n\n",
                "yum install ruby\n\n",
                "yum install aws-cli\n\n",
                "cd ~\n\n",
                "aws s3 cp s3://aws-codedeploy-us-east-1/latest/install . --region us-east-1\n\n",
                "chmod +x ./install\n\n",
                "./install auto\n\n",
                "echo 'hello world' > /var/www/html/index.html\n\n",
                "hostname >> /var/www/html/index.html\n\n",
                "chkconfig httpd on\n\n",
                "service httpd start\n\n"
              ]
            ]
          }
        }
      }
    },

    "LinuxWebAutoscaleUpPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "LinuxWebASG" },
        "Cooldown" : "300",
        "ScalingAdjustment" : "1"
      }
    },

    "LinuxWebAutoscaleDownPolicy" : {
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "LinuxWebASG" },
        "Cooldown" : "300",
        "ScalingAdjustment" : "-1"
      }
    },

    "LinuxWebCloudWatchCPUAlarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "SNS Notification and scale up if CPU Util is Higher than 90% for 10 mins",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "300",
        "EvaluationPeriods" : "2",
        "Threshold" : "90",
        "AlarmActions" : [ { "Ref": "LinuxWebAutoscaleUpPolicy" }, { "Ref" : "LinuxWebSNSTopic" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "LinuxWebASG" }
          }
        ],
        "ComparisonOperator" : "GreaterThanThreshold"
      }
    },

    "LinuxWebCloudWatchCPUAlarmLow" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "SNS Notification and scale down if CPU Util is less than 70% for 10 mins",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "300",
        "EvaluationPeriods" : "2",
        "Threshold" : "70",
        "AlarmActions" : [ { "Ref": "LinuxWebAutoscaleDownPolicy" }, { "Ref" : "LinuxWebSNSTopic" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "LinuxWebASG" }
          }
        ],
        "ComparisonOperator" : "LessThanThreshold"
      }
    },

    "LinuxWebELB" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "CrossZone" : true,
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : "60"
        },
        "HealthCheck" :  {
          "Target" : "HTTP:80/index.html",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "3",
          "Interval" : "15",
          "Timeout" : "5"
        },
        "LoadBalancerName" :  "LinuxWebELB",
        "Scheme" : "internet-facing",
        "Listeners" : [
          {
            "LoadBalancerPort" : "80",
            "InstancePort" : "80",
            "InstanceProtocol" : "HTTP",
            "Protocol" :  "HTTP"
          }
        ],
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "Subnets" : { "Ref": "PublicSubnets" },
        "Tags" : [{"Key" : "Network", "Value" : "public"}]
      }
    },

    "WindowsWebSNSTopic" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::SNS::Topic"
    },

    "WindowsWebASG" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Ref" : "AZ" },
        "VPCZoneIdentifier" : { "Ref": "PublicSubnets" },
        "MinSize" : "3",
        "MaxSize" : "3",
        "HealthCheckType" : "ELB",
        "HealthCheckGracePeriod" : "600",
        "NotificationConfiguration" : {
          "TopicARN" : { "Ref" : "WindowsWebSNSTopic" },
          "NotificationTypes" : [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ]
        },
        "LoadBalancerNames" : [ { "Ref" : "WindowsWebELB" } ],
        "DesiredCapacity" : "3",
        "LaunchConfigurationName" : { "Ref" : "WindowsWebLaunchConfig" },
        "Tags" : [
          {"Key" : "Name", "Value" : "WindowsWebServer", "PropagateAtLaunch" : "true" }
        ]
      }
    },

    "WindowsWebLaunchConfig": {
      "Condition" : "CreateWindows",
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress" : "true",
        "ImageId": { "Ref": "WindowsAMIID" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                  "echo hello world > c:\\inetpub\\wwwroot\\index.html\n",
                  "hostname >> c:\\inetpub\\wwwroot\\index.html\n",
                  "if not exist \"c:\temp\" mkdir c:\temp\n",
                  "powershell.exe -Command Read-S3Object -BucketName aws-codedeploy-us-east-1/latest -Key codedeploy-agent.msi -File c:\\temp\\codedeploy-agent.msi\n",
                  "c:\\temp\\codedeploy-agent.msi /quiet /l c:\\temp\\host-agent-install-log.txt\n",
                  "powershell.exe -Command Get-Service -Name codedeployagent\n",
                "</script>\n"
              ]
            ]
          }
        }
      }
    },

    "WindowsWebAutoscaleUpPolicy" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WindowsWebASG" },
        "Cooldown" : "300",
        "ScalingAdjustment" : "1"
      }
    },

    "WindowsWebAutoscaleDownPolicy" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::AutoScaling::ScalingPolicy",
      "Properties" : {
        "AdjustmentType" : "ChangeInCapacity",
        "AutoScalingGroupName" : { "Ref" : "WindowsWebASG" },
        "Cooldown" : "300",
        "ScalingAdjustment" : "-1"
      }
    },

    "WindowsWebCloudWatchCPUAlarmHigh" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "SNS Notification and scale up if CPU Util is Higher than 90% for 10 mins",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "300",
        "EvaluationPeriods" : "2",
        "Threshold" : "90",
        "AlarmActions" : [ { "Ref": "WindowsWebAutoscaleUpPolicy" }, { "Ref" : "WindowsWebSNSTopic" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "WindowsWebASG" }
          }
        ],
        "ComparisonOperator" : "GreaterThanThreshold"
      }
    },

    "WindowsWebCloudWatchCPUAlarmLow" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "SNS Notification and scale down if CPU Util is less than 70% for 10 mins",
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "300",
        "EvaluationPeriods" : "2",
        "Threshold" : "70",
        "AlarmActions" : [ { "Ref": "WindowsWebAutoscaleDownPolicy" }, { "Ref" : "WindowsWebSNSTopic" } ],
        "Dimensions" : [
          {
            "Name" : "AutoScalingGroupName",
            "Value" : { "Ref" : "WindowsWebASG" }
          }
        ],
        "ComparisonOperator" : "LessThanThreshold"
      }
    },

    "WindowsWebELB" : {
      "Condition" : "CreateWindows",
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "CrossZone" : true,
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : "60"
        },
        "HealthCheck" :  {
          "Target" : "HTTP:80/index.html",
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "3",
          "Interval" : "15",
          "Timeout" : "5"
        },
        "LoadBalancerName" :  "WindowsWebELB",
        "Scheme" : "internet-facing",
        "Listeners" : [
          {
            "LoadBalancerPort" : "80",
            "InstancePort" : "80",
            "InstanceProtocol" : "HTTP",
            "Protocol" :  "HTTP"
          }
        ],
        "SecurityGroups": [ { "Ref": "WebSecurityGroup" } ],
        "Subnets" : { "Ref": "PublicSubnets" },
        "Tags" : [{"Key" : "Network", "Value" : "public"}]
      }
    }
  },

  "Outputs" : {
    "LinuxWebFQDN" : { "Value": { "Fn::GetAtt" : [ "LinuxWebELB", "DNSName" ]} },
    "WindowsWebFQDN" : {
      "Condition" : "CreateWindows",
      "Value": { "Fn::GetAtt" : [ "WindowsWebELB", "DNSName" ]}
    }
  }
}
